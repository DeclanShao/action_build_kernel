name: Action_Kernel


on:
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load Configuration
        uses: falti/dotenv-action@v0.2.5
        id: config
        with:
          path: config.env

      - name: Check Configuration
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.kernel_name }}" "KERNEL_NAME config"
          required "${{ steps.config.outputs.branch_name }}" "BRANCH_NAME config"
          required "${{ steps.config.outputs.kernel_url }}" "KERNEL_URL config"
 
      - name: Git kernel
        run: |
          git clone "${{ steps.config.outputs.kernel_url }}" -b "${{ steps.config.outputs.branch_name }}" --depth=1 kernel

      - name: Initializing Environment
        run: |
          sudo apt-get install wget git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev zlib1g-dev:i386 g++-multilib python-networkx libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip
          
      - name: Download gcc 
        run: |
          cd $GITHUB_WORKSPACE/kernel
          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/10.3-2021.07/binrel/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz
          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/10.3-2021.07/binrel/gcc-arm-10.3-2021.07-x86_64-arm-none-eabi.tar.xz
          mkdir tool
          tar -xvJf gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz -C tool
          tar -xvJf gcc-arm-10.3-2021.07-x86_64-arm-none-eabi.tar.xz -C tool
          mv tool/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu tool/aarch
          mv tool/gcc-arm-10.3-2021.07-x86_64-arm-none-eabi tool/arm

      - name: Make kernel
        run: |
          sudo mv build.sh $GITHUB_WORKSPACE/kernel
          cd $GITHUB_WORKSPACE/kernel
          bash ./build.sh

      - name: Upload to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "kernel/out/arch/arm64/boot/Image.gz-dtb"
          tag: "${{ steps.config.outputs.kernel_name }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload boot to WeTransfer
        run: |
              cd $GITHUB_WORKSPACE/kernel/out/arch/arm64/boot
              curl -sL https://git.io/file-transfer | sh
              ./transfer wet Image.gz-dtb
